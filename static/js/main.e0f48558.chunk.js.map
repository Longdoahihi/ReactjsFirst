{"version":3,"sources":["components/ColorPicker.js","components/Result.js","components/SizeSetting.js","components/Reset.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPicker","props","state","colors","color","backgroundColor","this","onReceiveColor","elements","map","index","style","showColor","className","onClick","setActiveColor","React","Component","Result","showFontSize","fontSize","borderColor","id","SieSetting","params","onChangeSize","type","changeSize","Reset","setDefault","onSetDefault","App","result","setState","alert","value","onsetColor","bind","SizeSetting","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f48558.chunk.js","sourcesContent":["import React from 'react';\r\nclass ColorPicker extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          colors : ['red','orange','blue','yellow','green']\r\n      }\r\n    }\r\n    showColor(color){\r\n      return {\r\n        backgroundColor : color\r\n      }\r\n    }\r\n    setActiveColor(color){\r\n      this.props.onReceiveColor(color); \r\n    }\r\n    render() {\r\n      var elements = this.state.colors.map((color,index)=>{\r\n          return <span \r\n                        style={this.showColor(color)} \r\n                        key={index}\r\n                        className={color === this.props.color ? 'active' : ''}\r\n                        onClick={()=>{this.setActiveColor(color)}}\r\n                  >\r\n                  </span>\r\n      })\r\n      \r\n      return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">      \r\n                <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Color Picker</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      {elements}\r\n                    <br/>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\nexport default ColorPicker;","import React from 'react';\r\nclass Result extends React.Component {\r\n  showFontSize = ()=>{\r\n    return { \r\n      fontSize : this.props.fontSize,\r\n      borderColor : this.props.color,\r\n      color : this.props.color\r\n    }\r\n  }\r\n    render() {\r\n      return (\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n            <p>Color : {this.props.color} - font-size : {this.props.fontSize}px</p>\r\n            <div id=\"content\" style={this.showFontSize()} >Nội dung setting</div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\nexport default Result;","import React from 'react';\r\nclass SieSetting extends React.Component {\r\n    changeSize(params){\r\n        this.props.onChangeSize(params);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Size: {this.props.fontSize}px</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={()=>{this.changeSize(-1)}}>Giảm</button>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={()=>{this.changeSize(1)}}>Tăng</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SieSetting;","import React from 'react';\r\nclass Reset extends React.Component {\r\n    setDefault = ()=>{\r\n      this.props.onSetDefault(true)\r\n    };\r\n    render() {\r\n      return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.setDefault}>Reset</button>\r\n      )\r\n    }\r\n}\r\nexport default Reset;","import React from 'react';\nimport ColorPicker from './components/ColorPicker'\nimport Result from './components/Result'\nimport SizeSetting from './components/SizeSetting'\nimport Reset from './components/Reset'\nclass App extends React.Component {\n  constructor(props){\n    super(props) \n    this.state = {\n        color : 'red',\n        fontSize: 15\n    }\n    this.onsetColor = this.onsetColor.bind(this);\n  }\n  onsetColor(params){\n    this.setState({\n      color : params\n    })\n  }\n  onChangeSize = (params)=>{\n    var result =  this.state.fontSize + params\n        if (result <= 35 &&  result >= 0){\n          this.setState({\n            fontSize : this.state.fontSize + params\n          })\n        }else {\n            if (result > 35){\n                alert(\"Không thể tăng font-size quá 35px\")\n            } else {\n                alert(\"Không thể giảm font-size quá 0px\")\n            }\n        }\n    \n  }\n  onSetDefault = (value)=>{\n    if (value){\n      this.setState({\n        color : 'red',\n        fontSize: 15\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"row\">\n              <ColorPicker color={this.state.color} onReceiveColor={this.onsetColor}/>\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                <SizeSetting \n                fontSize={this.state.fontSize}\n                onChangeSize={this.onChangeSize}\n                />\n                <Reset onSetDefault={this.onSetDefault}/>  \n            </div>\n            <Result color={this.state.color} fontSize={this.state.fontSize}/>\n          </div>\n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}